<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>TeLis Video Classroom</title>
    <link href="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.css" rel="stylesheet">
    <script src="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.js"></script>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="./../../bootstrap.min.css">
    <link rel="stylesheet" href="./../../style.css">

    <style>
        /* Nickname Modal Styles */
        .nickname-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 85, 77, 0.9);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }
        .nickname-box {
            background: white;
            padding: 30px;
            border-radius: 8px;
            width: 90%;
            max-width: 400px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.2);
        }
        .nickname-title {
            color: #00554d;
            font-size: 24px;
            margin-bottom: 15px;
            font-weight: bold;
        }
        .nickname-input {
            width: 100%;
            padding: 12px;
            border: 2px solid #00554d;
            border-radius: 4px;
            font-size: 16px;
            margin-bottom: 10px;
        }
        .nickname-submit {
            background: #00554d;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            width: 100%;
            transition: background 0.3s;
        }
        .nickname-submit:hover {
            background: #003d36;
        }
        .nickname-error {
            color: #d32f2f;
            margin-top: 5px;
            font-size: 14px;
            display: none;
        }
        
        /* Video Elements */
        #localVideo {
            width: 200px;
            height: 150px;
            background: black;
            margin: 10px;
        }
        #remoteVideo {
            width: 100%;
            height: auto;
            max-height: 70vh;
            background: black;
        }
    </style>
</head>
<body>
    <!-- Nickname Entry Modal -->
    <div id="nicknameOverlay" class="nickname-overlay">
        <div class="nickname-box">
            <div class="nickname-title">Enter Your Display Name</div>
            <input type="text" id="nicknameInput" class="nickname-input" autofocus>
            <div id="nicknameError" class="nickname-error">Please enter a name (3-20 characters)</div>
            <button id="nicknameSubmit" class="nickname-submit">Join Classroom</button>
        </div>
    </div>

    <!-- Main App Content -->
    <div id="mainContent" style="display:none;">
        <div class="header-bar">
            <div style="font-weight:bold;">TPSC Video Classroom Session</div>
            <div class="info-group">
                <div id="clock"></div>
                <div id="day"></div>
                <div id="ip"></div>
                <div id="location"></div>
            </div>
        </div>

        <div class="main-wrap">
            <div class="call-wrap card" style="z-index: 99">
                <div class="action-wrap" style="padding:30px;">
                    <!-- Video Elements -->
                    <div style="display: flex; flex-wrap: wrap;">
                        <div>
                            <video id="localVideo" autoplay muted></video>
                            <div id="localUsername"></div>
                        </div>
                        <div style="flex-grow: 1;">
                            <video id="remoteVideo" autoplay></video>
                        </div>
                    </div>
                    
                    <!-- Controls -->
                    <div style="display: flex; justify-content: center; gap: 20px; margin-top: 20px;">
                        <button id="muteBtn" class="btn">
                            <i class="material-icons">mic</i>
                        </button>
                        <button id="videoBtn" class="btn">
                            <i class="material-icons">videocam</i>
                        </button>
                        <button id="endCallBtn" class="btn red">
                            <i class="material-icons">call_end</i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"></script>
    <script src="./../../jquery-3.4.1.min.js"></script>
    <script src="./../../app.js"></script>

    <script>
        $(function() {
            // Clock function
            function updateTime() {
                const now = new Date();
                const clock = now.toLocaleTimeString();
                const day = now.toLocaleDateString(undefined, { 
                    weekday: 'long', 
                    year: 'numeric', 
                    month: 'long', 
                    day: 'numeric' 
                });
                $('#clock').text(`Time: ${clock}`);
                $('#day').text(`Date: ${day}`);
            }
            setInterval(updateTime, 1000);
            updateTime();

            // IP Location
            fetch('https://ipapi.co/json/')
                .then(res => res.json())
                .then(data => {
                    $('#ip').text(`IP: ${data.ip}`);
                    $('#location').text(`Location: ${data.city}, ${data.country_name}`);
                });

            // Variables for media streams
            let localStream;
            let currentRoom;
            let currentUser;
            
            // Nickname Handling
            const urlParams = new URLSearchParams(window.location.search);
            const meeting_id = urlParams.get('meetingID');
            let user_id = urlParams.get('uid');

            // If no meeting ID, show join/create options
            if (!meeting_id) {
                $('#nicknameOverlay').hide();
                $('#mainContent').show();
                
                $(document).on("click", ".join-meeting", function() {
                    $(".action-wrap").empty().html(`
                        <div class="row">
                            <form class="col s12">
                                <div class="row">
                                    <div class="input-field col s12">
                                        <i class="material-icons prefix">meeting_room</i>
                                        <input id="meetingIdInput" type="text" class="validate">
                                        <label for="meetingIdInput">Meeting ID</label>
                                    </div>
                                </div>
                                <button class="btn waves-effect waves-light teal darken-2 join-submit" type="submit">
                                    Join <i class="material-icons right">send</i>
                                </button>
                            </form>
                        </div>
                    `);
                });

                $(document).on("click", ".join-submit", function(e) {
                    e.preventDefault();
                    const join_value = $("#meetingIdInput").val().trim();
                    if (!join_value) return;
                    
                    // Show nickname overlay with the meeting ID
                    $('#mainContent').hide();
                    $('#nicknameOverlay').show();
                    window.history.replaceState(null, null, `?meetingID=${join_value}`);
                });
                return;
            }

            // If we have meeting ID but no user ID, show nickname overlay
            if (!user_id) {
                $('#mainContent').hide();
                
                $('#nicknameSubmit').click(function() {
                    const nickname = $('#nicknameInput').val().trim();
                    if (nickname.length < 3 || nickname.length > 20) {
                        $('#nicknameError').show();
                        return;
                    }
                    
                    // Store in sessionStorage for future use
                    sessionStorage.setItem('meeting_nickname', nickname);
                    
                    // Add to URL and initialize app
                    const newUrl = new URL(window.location.href);
                    newUrl.searchParams.set('uid', encodeURIComponent(nickname));
                    window.history.replaceState(null, null, newUrl.toString());
                    
                    initializeApp(meeting_id, nickname);
                });

                $('#nicknameInput').keypress(function(e) {
                    if (e.which === 13) {
                        $('#nicknameSubmit').click();
                    }
                });
            } else {
                // If we have both meeting ID and user ID, initialize immediately
                initializeApp(meeting_id, user_id);
            }

            async function initializeApp(meetingId, userId) {
                $('#nicknameOverlay').hide();
                $('#mainContent').show();
                $(".username_holder").val(userId);
                $('#localUsername').text(userId);
                
                try {
                    // Get user media
                    localStream = await navigator.mediaDevices.getUserMedia({
                        audio: true,
                        video: true
                    });
                    
                    // Display local video
                    const localVideo = document.getElementById('localVideo');
                    localVideo.srcObject = localStream;
                    
                    // Set up controls
                    setupControls();
                    
                    // Initialize your main app
                    if (typeof MyApp !== 'undefined' && typeof MyApp._init === 'function') {
                        MyApp._init(userId, meetingId, localStream);
                    } else {
                        console.error("MyApp is not defined");
                    }
                } catch (error) {
                    console.error('Error accessing media devices:', error);
                    alert('Could not access camera/microphone. Please check permissions.');
                }
            }
            
            function setupControls() {
                // Mute/unmute
                $('#muteBtn').click(function() {
                    const isMuted = localStream.getAudioTracks()[0].enabled;
                    localStream.getAudioTracks()[0].enabled = !isMuted;
                    $(this).find('i').text(isMuted ? 'mic_off' : 'mic');
                });
                
                // Start/stop video
                $('#videoBtn').click(function() {
                    const isVideoOn = localStream.getVideoTracks()[0].enabled;
                    localStream.getVideoTracks()[0].enabled = !isVideoOn;
                    $(this).find('i').text(isVideoOn ? 'videocam_off' : 'videocam');
                });
                
                // End call
                $('#endCallBtn').click(function() {
                    if (localStream) {
                        localStream.getTracks().forEach(track => track.stop());
                    }
                    window.location.href = '/';
                });
            }
        });
    </script>
</body>
</html>
